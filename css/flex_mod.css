/*FLEX INSTRUCTIONS IN READINESS AND WILL BE APPLLIED IN JS/NO-JS SCENARIO BUT SEPARATE INSTRUCTIONS FROM UNITS*/

/*REMEMBER override class hardcoded in HTML*/

section {
	-webkit-box-align: start;
	-ms-flex-align: start;
	align-items: flex-start;
	-ms-flex-wrap: wrap;
	-webkit-flex-wrap: wrap;
	flex-wrap: wrap;
}
section>* {
	-ms-flex-item-align: start;
	-webkit-align-self: flex-start;
	align-self: flex-start;
}
section:nth-child(odd) {
	-webkit-box-orient: horizontal;
	-webkit-box-direction: reverse;
	-moz-box-direction: reverse;
	-ms-flex-direction: row-reverse;
	-webkit-flex-direction: row-reverse;
	flex-direction: row-reverse;
}
article {
	-webkit-box-flex: 6;
	-ms-flex: 6 1 1%;
	-webkit-flex: 6 1 1%;
	flex: 6 1 1%;
}
section img {
	-webkit-box-flex: 4;
	-ms-flex: 4 1 1%;
	-webkit-flex: 4 1 1%;
	flex: 4 1 1%;
}
section.ptrt img {
	-webkit-box-flex: 1;
	-ms-flex: 1 1 %;
	-webkit-flex: 1 1 1%;
	flex: 1 1 1%;
}
html.js body img, html.no-js body img {
	-ms-flex-negative: 0;
	-webkit-flex-shrink: 0;
	flex-shrink: 0;
}
#footer_girl {
	-webkit-box-flex: 20;
	-ms-flex: 20 1 auto;
	-webkit-flex: 20 1 auto;
	flex: 20 1 auto;
}
#fb {
	-webkit-box-flex: 1;
	-ms-flex: 1 1 6em;
	-webkit-flex: 1 1 6em;
	flex: 1 1 6em;
}
footer>a {
	-webkit-box-flex: 0;
	-ms-flex: 0 0 100%;
	-webkit-flex: 0 0 100%;
	flex: 0 0 100%;
}
/* only bother if flex-wrap is supported, happy to fallback to floats for buggier flex implementations */

@supports(background-size: contain) {
    /* background shorthand is used for individual pages and background-size: is omitted to support older browsers. ZAP @ no-js*/
	#wrap h2 span, header {
		background-size: contain;
	}
}
	.backgroundsize h2 span {
		background-size: contain;
	}
	@media screen and (max-width: 667px) {
		#footer_girl {
			-webkit-box-flex: 5;
			-ms-flex: 5 1 5em;
			-webkit-flex: 5 1 5em;
			flex: 5 1 5em;
		}
		#fb {
			-webkit-box-flex: 1;
			-ms-flex: 1 1 2em;
			-webkit-flex: 1 1 2em;
			flex: 1 1 2em;
		}
		@supports(flex-wrap: wrap) or (-webkit-flex-wrap: wrap) or (-ms-flex-wrap: wrap) {
			footer>a {
				padding: .75em 2% .75em 0;
			}
		}
		.flexwrap footer>a {
			padding: .75em 2% .75em 0;
		}
	}
	/*IF js disbaled and feature queries not supported what to do?
hard code a class of flexy? ot fallback to inline-block
*/
	@media only screen and (min-width: 1024px) {
		/* only bother if flex-wrap is supported, happy to fallback to floats for buggier flex implementations */
		@supports(flex-wrap: wrap) or (-webkit-flex-wrap: wrap) or (-ms-flex-wrap: wrap) {
			.no-js h2 span {
				background-size: contain;
			}
			section {
				display: -webkit-box;
				display: -webkit-flex;
				display: -ms-flexbox;
				display: flex;
			}
			footer {
				/*display: -webkit-box; ipod not resizing on orientation*/
				display: -webkit-flex;
				display: -ms-flexbox;
				display: flex;
				-ms-flex-wrap: wrap;
				-webkit-flex-wrap: wrap;
				flex-wrap: wrap;
				-webkit-box-align: end;
				-ms-flex-align: end;
				-webkit-align-items: flex-end;
				align-items: flex-end;
			}
			/* by default the border will run right up to the floating image, no margin, we choose to enable it only on flexwrap support*/
			h3 {
				border-bottom: solid 1px;
			}
			p:first-of-type {
				margin: 0;
			}
		
			header {
				background-size: 100%;
			}
			section.ptrt img {
				margin: 1em 1em 0;
			}
			#footer_girl {
				width: auto;
				margin: 0 0 .25rem 1rem;
			}
			#fb {
				margin: 0 .7em .5rem 0;
				left: 0;
				min-width: 6em;
			}
			footer>a {
				box-sizing: border-box;
				padding: .75em 1% .75em 0;
			}
		}
		/*@@*/
		.flexwrap header {
			background-size:100%;
		}
		.flexwrap section.ptrt img {
			margin: 1em 1em 0;
		}
		.flexwrap #footer_girl {
			width: auto;
			margin: 0 0 .25rem 1rem;
		}
		.flexwrap #fb {
			margin: 0 .7em .5rem 0;
			left: 0;
			min-width: 6em;
		}
		.flexwrap footer>a {
			box-sizing: border-box;
			padding: .75em 1% .75em 0;
		}
		.flexwrap footer {
			/*display: -webkit-box; ipod not resizing on orientation*/
			display: -webkit-flex;
			display: -ms-flexbox;
			display: flex;
			-ms-flex-wrap: wrap;
			-webkit-flex-wrap: wrap;
			flex-wrap: wrap;
			-webkit-box-align: end;
			-ms-flex-align: end;
			-webkit-align-items: flex-end;
			align-items: flex-end;
		}
		.flexwrap section {
			display: -webkit-box;
			display: -webkit-flex;
			display: -ms-flexbox;
			display: flex;
		}
		.flexwrap h3 {
			border-bottom: solid 1px;
		}
		.flexwrap p:first-of-type {
			margin: 0;
		}
	}
	/*Q*/