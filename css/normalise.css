@charset "UTF-8";
/*------------------------------------*\
  #MAIN
\*------------------------------------*/
/**
 * CONTENTS
 *
 * SETTINGS
 * All..................Because our Settings layer doesn’t actually produce any
 *                      CSS, we can safely glob all of the files into one import
 *                      without risk of bloating our compiled stylesheet. This
 *                      also allows us to easily recycle all of our
 *                      project-level settings into other Sass file/projects.
 *                      Please see `settings/_all.scss` for a full table of
 *                      contents.
 *
 * TOOLS
 * All..................Because our Tools layer doesn’t actually produce any
 *                      CSS, we can safely glob all of the files into one import
 *                      without risk of bloating our compiled stylesheet. This
 *                      also allows us to easily recycle all of our
 *                      project-level tooling into other Sass file/projects.
 *                      Please see `tools/_all.scss` for a full table of
 *                      contents.
 *
 * GENERIC
 * Box-sizing...........Better default `box-sizing`.
 * Normalize.css........A level playing field.
 * Reset................A pared back reset to remove margins.
 * Shared...............Sensibly and tersely share global commonalities.
 *
 * ELEMENTS
 * Page.................Page-level styles (HTML element).
 * Headings.............Heading styles.
 * Links................Hyperlink styles.
 * Lists................Default list styles.
 * Images...............Base image styles.
 * Quotes...............Styling for blockquotes, etc.
 *
 * OBJECTS
 * Wrappers.............Wrappers and page constraints.
 * Layout...............Generic layout module.
 * Headline.............Simple object for structuring heading pairs.
 * Media................The media object.
 * List-bare............Lists with no bullets or indents.
 * List-inline..........Simple abstraction for setting lists out in a line.
 * Crop.................A container for cropping image and media content.
 *
 * COMPONENTS
 * Logo.................Make our logo a reusable component.
 * Page.................Full page wrapper.
 * Page-head............Page header styles.
 * Page-foot............Page footer styles.
 * Nav primary..........The site’s main nav.
 * Nav secondary........Secondary nav styles.
 * Masthead.............Site’s main masthead.
 * Sub-content..........Secondary/supporting content.
 * Panel................Simple panelled boxout.
 * Score................Score lozenge for place ratings.
 * Buttons..............Button styles.
 * Avatar...............General avatar styles.
 * Testimonial..........Quote styles.
 * Calendar.............Simple static calendar component.
 * Headline.............Basic heading style for generic headlines.
 * Promo................Promotional box styling.
 * Pagination...........Responsive pagination component.
 *
 * SCOPES
 * Prose................Set up a new styling context for long-format text.
 *
 * THEMES
 * Red..................Simple red theme for the site.
 *
 * TRUMPS
 * Headings.............Reassigning our heading styles to helper classes.
 * Widths...............Simple width helper classes.
 * Healthcheck..........Visual health-check tool.
 * Debug................Highlight potentially troublesome code.
 * Shame.css............Short-term hacks and quick-fixes.
 */
/*------------------------------------*\
  #BOX-SIZING
\*------------------------------------*/
/**
 * More sensible default box-sizing:
 * css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice
 */
html {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

*, *:before, *:after {
  -webkit-box-sizing: inherit;
  -moz-box-sizing: inherit;
  box-sizing: inherit;
}

/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/*------------------------------------*\
  #RESET
\*------------------------------------*/
/**
 * A very simple reset that sits on top of Normalize.css.
 */
body,
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
form, fieldset, legend,
figure,
table, th, td, caption,
hr {
  margin: 0;
  padding: 0;
}

/*------------------------------------*\
  #SHARED
\*------------------------------------*/
/**
 * Shared declarations for certain elements.
 */
/**
 * Always declare margins in the same direction:
 * csswizardry.com/2012/06/single-direction-margin-declarations
 */
h1, h2, h3, h4, h5, h6,
ul, ol, dl,
blockquote, p, address,
hr,
table,
fieldset, figure,
pre {
  margin-bottom: 20px;
}

ul, ol,
dd {
  margin-left: 20px;
}

/*------------------------------------*\
  #PAGE
\*------------------------------------*/
/**
 * Page-level styling (e.g. HTML and BODY elements).
 */
html {
  font-size: 0.875em;
  line-height: 1.428571429;
  font-family: Lato, sans-serif;
  background-color: #f3f3f3;
  color: #333;
}

/*------------------------------------*\
  #HEADINGS
\*------------------------------------*/
/**
 * Simple default styles for headings 1 through 6.
 */
h1, h2, h3, h4, h5, h6 {
  font-weight: 700;
}

h1 {
  font-size: 36px;
  font-size: 2.571428571rem;
  line-height: 1.111111111;
}

h2 {
  font-size: 28px;
  font-size: 2rem;
  line-height: 1.428571429;
}

h3 {
  font-size: 24px;
  font-size: 1.714285714rem;
  line-height: 1.666666667;
}

h4 {
  font-size: 20px;
  font-size: 1.428571429rem;
  line-height: 1;
}

h5 {
  font-size: 18px;
  font-size: 1.285714286rem;
  line-height: 1.111111111;
}

h6 {
  font-size: 16px;
  font-size: 1.142857143rem;
  line-height: 1.25;
}

/*------------------------------------*\
  #LINKS
\*------------------------------------*/
/**
 * Default styles for simple hyperlinks.
 */
a {
  color: inherit;
  font-weight: 700;
  text-decoration: none;
}
a:hover, a:focus {
  text-decoration: underline;
}

/*------------------------------------*\
  #LISTS
\*------------------------------------*/
/**
 * Remove trailing margins from nested lists.
 */
li > ul,
li > ol {
  margin-bottom: 0;
}

/**
 * Visually offset definition titles from their definitions.
 */
dt {
  font-weight: 700;
}

/*------------------------------------*\
    #IMAGES
\*------------------------------------*/
/**
 * 1. Fluid images for responsive purposes.
 * 2. Offset `alt` text from surrounding copy.
 * 3. Setting `vertical-align` removes the whitespace that appears under `img`
 *    elements when they are dropped into a page as-is. Safer alternative to
 *    using `display: block;`.
 */
img {
  max-width: 100%;
  /* [1] */
  font-style: italic;
  /* [2] */
  vertical-align: middle;
  /* [3] */
}

/**
 * 1. If a `width` and/or `height` attribute have been explicitly defined, let’s
 *    not make the image fluid.
 */
img[width],
img[height] {
  /* [1] */
  max-width: none;
}

/*------------------------------------*\
  #QUOTES
\*------------------------------------*/
/**
 * Basic styling for quoted text.
 */
q {
  font-style: italic;
  quotes: "‘" "’";
}
q:before {
  content: open-quote;
}
q:after {
  content: close-quote;
}

blockquote {
  quotes: "“" "”";
}
blockquote p {
  text-indent: -0.42em;
}
blockquote p:before {
  content: open-quote;
}
blockquote p:after {
  content: no-close-quote;
}
blockquote p:last-of-type {
  margin-bottom: 0;
}
blockquote p:last-of-type:after {
  content: close-quote;
}

/*------------------------------------*\
  #WRAPPERS
\*------------------------------------*/
.o-wrapper {
  max-width: 1280px;
  padding-right: 20px;
  padding-left: 20px;
  margin-right: auto;
  margin-left: auto;
}
.o-wrapper:after {
  content: "";
  display: table;
  clear: both;
}

/*------------------------------------*\
  #LAYOUT
\*------------------------------------*/
.o-layout {
  margin: 0;
  padding: 0;
  list-style: none;
  margin-left: -20px;
}

.o-layout__item {
  display: inline-block;
  vertical-align: top;
  width: 100%;
  padding-left: 20px;
}

/*------------------------------------*\
  #HEADLINE
\*------------------------------------*/
.o-headline {
  margin-bottom: 1.428571429rem;
}

.o-headline__main,
.o-headline__sub {
  margin-bottom: 0;
  line-height: 1;
}

/*------------------------------------*\
  #MEDIA
\*------------------------------------*/
.o-media {
  display: table;
  width: 100%;
}

.o-media__img,
.o-media__body {
  display: table-cell;
  vertical-align: top;
}
.o-media--middle > .o-media__img, .o-media--middle >
.o-media__body {
  vertical-align: middle;
}

.o-media__img {
  padding-right: 20px;
}
.o-media__img img {
  max-width: none;
}

.o-media__body {
  width: 100%;
}

/*------------------------------------*\
  #LIST-BARE
\*------------------------------------*/
.o-list-bare {
  list-style: none;
  margin-left: 0;
}

/*------------------------------------*\
  #LIST-INLINE
\*------------------------------------*/
.o-list-inline {
  margin: 0;
  padding: 0;
  list-style: none;
}

.o-list-inline__item {
  display: inline-block;
}

/*------------------------------------*\
    #CROP
\*------------------------------------*/
/**
 * Provide a cropping container in order to display media (usually images)
 * cropped to certain ratios.
 *
 * 1. Set up a positioning context in which the image can sit.
 * 2. This is the crucial part: where the cropping happens.
 */
.o-crop {
  position: relative;
  /* [1] */
  display: block;
  overflow: hidden;
  /* [2] */
}

/**
 * A variety of different standard ratios to crop to.
 *
 * We use the `padding` trick to create a fluid-height container (`padding`s set
 * in percentages will track the current width of the element).
 */
.o-crop--1\:1 {
  padding-top: 100%;
}

.o-crop--4\:3 {
  padding-top: 75%;
}

.o-crop--16\:9 {
  padding-top: 56.25%;
}

/**
 * Apply this class to the content (usually `img`) that needs cropping.
 *
 * 1. Positioning to the bottom usually gives consistently better results as
 *    most images’ subjects are toward the bottom of the frame. Of course,
 *    your mileage may vary.
 */
.o-crop__content {
  position: absolute;
  bottom: 0;
  /* [1] */
  left: 0;
}

/*------------------------------------*\
  #LOGO
\*------------------------------------*/
.c-logo__fill {
  fill: #378bb5;
}
.c-page-head .c-logo__fill {
  fill: currentcolor;
}

/*------------------------------------*\
  #PAGE
\*------------------------------------*/
@media screen and (min-width: 1024px) {
  .c-page.has-fixed-page-head {
    padding-top: 70px;
  }
}

/*------------------------------------*\
  #PAGE-HEAD
\*------------------------------------*/
.c-page-head {
  background-color: #378bb5;
  color: #fff;
  padding: 20px;
}
.c-page-head:after {
  content: "";
  display: table;
  clear: both;
}
@media screen and (min-width: 1024px) {
  .c-page-head.is-fixed {
    position: fixed;
    top: 0;
    right: 0;
    left: 0;
    z-index: 1;
    -webkit-backface-visibility: hidden;
    -moz-backface-visibility: hidden;
    -o-backface-visibility: hidden;
    backface-visibility: hidden;
  }
}

.c-page-head__logo {
  line-height: 0;
  float: left;
}

/**
 * 1. The height of the nav needs to marry up with the height of the logo.
 */
.c-page-head__nav {
  float: right;
  line-height: 30px;
  /* [1] */
}

/*------------------------------------*\
  #PAGE-FOOT
\*------------------------------------*/
.c-page-foot {
  padding: 20px;
  font-size: 12px;
  font-size: 0.857142857rem;
  line-height: 1.666666667;
  background-color: #333;
  color: #fff;
}

/*------------------------------------*\
  #NAV-PRIMARY
\*------------------------------------*/
.c-nav-primary__link {
  display: inline-block;
  padding-right: 20px;
  padding-left: 20px;
  font-weight: 400;
}
.c-nav-primary__link.is-active {
  text-decoration: underline;
  cursor: default;
}

/*------------------------------------*\
  #NAV-SECONDARY
\*------------------------------------*/
.c-nav-secondary {
  text-align: center;
}

.c-nav-secondary__item {
  padding-right: 10px;
  padding-left: 10px;
}

.c-nav-secondary__link {
  font-weight: 400;
}

/*------------------------------------*\
  #MASTHEAD
\*------------------------------------*/
.c-masthead {
  position: relative;
  background-color: #378bb5;
  color: white;
  overflow: hidden;
  height: 0;
  padding-top: 56.25%;
  margin-bottom: 20px;
}
@media screen and (min-width: 1280px) {
  .c-masthead {
    padding-top: 0;
    height: 720px;
  }
}

.c-masthead__media {
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

.c-masthead__text {
  position: absolute;
  right: 0;
  bottom: 0;
  left: 0;
  padding: 20px;
  margin-bottom: 0;
  background-color: rgba(0, 0, 0, 0.25);
  text-shadow: 0 -1px rgba(0, 0, 0, 0.5);
}

.c-masthead__title {
  font-weight: 900;
  font-size: 60px;
  font-size: 4.285714286rem;
  line-height: 1;
}

/*------------------------------------*\
    #SUB-CONTENT
\*------------------------------------*/
/**
 * Housing for any secondary content.
 */
.c-sub-content {
  padding: 20px;
  background-color: rgba(0, 0, 0, 0.05);
  color: #666;
  /**
   * Remove the margin from the last element in the sub-content area so as to
   * avoid doubled spacings (compounded paddings and margins).
   */
}
.c-sub-content > :last-child {
  margin-bottom: 0;
}

/**
 * 1. Outdent the heading to touch the edges of the sub-content area.
 * 2. Re-indent the heading’s actual text to line back up with the rest of
 *    the sub-content’s content.
 * 3. Adjust the bottom margin to account for the added border bottom (puts
 *    text back on the baseline grid).
 */
.c-sub-content__title {
  font-size: 12px;
  font-size: 0.857142857rem;
  line-height: 1.666666667;
  color: #378bb5;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  font-weight: 400;
  margin-right: -20px;
  /* [1] */
  margin-left: -20px;
  /* [1] */
  padding-right: 20px;
  /* [2] */
  padding-left: 20px;
  /* [2] */
  border-bottom: 1px solid;
  margin-bottom: 19px;
  /* [3] */
}

.c-sub-content__title--featured {
  font-weight: 700;
  border-bottom-width: 2px;
  margin-bottom: 18px;
  /* [3] */
}

/**
 * Image-like content should be full-bleed in the sub-content area.
 *
 * 1. Pull element back out to the very left of the sub-content (including
 *    padding).
 * 2. Needs disabling so that we can manipulate widths.
 * 3. Fallback width for browsers that don’t support `calc()`.
 * 4. Force image to be full width *plus* the area taken up by the
 *    sub-content’s padding.
 */
.c-sub-content__img {
  margin-left: -20px;
  /* [1] */
  max-width: none;
  /* [2] */
  width: 100%;
  /* [3] */
  width: calc(100% + 40px);
  /* [4] */
}

/*------------------------------------*\
  #PANEL
\*------------------------------------*/
.c-panel {
  background-color: #fff;
  border-radius: 3px;
  overflow: hidden;
  margin-bottom: 20px;
  border: 1px solid #e4e4e4;
  box-shadow: 2px 2px 0 rgba(0, 0, 0, 0.025);
}

.c-panel__masthead {
  height: 200px;
  overflow: hidden;
  background-color: #e4e4e4;
}

.c-panel__masthead--small {
  height: 100px;
}

.c-panel__masthead--fluid {
  position: relative;
  height: auto;
  padding-top: 56.25%;
}

.c-panel__masthead-media {
  width: 100%;
  object-fit: cover;
}
.c-panel__masthead--fluid .c-panel__masthead-media {
  position: absolute;
  top: -25%;
  left: 0;
}

.c-panel__content {
  padding: 20px;
}
.c-panel__content > :last-child {
  margin-bottom: 0;
}

.c-panel__link {
  display: block;
  text-align: center;
  text-decoration: none;
  padding: 20px;
  border-top: 1px solid #e4e4e4;
  color: #333;
}
.c-panel__link:hover, .c-panel__link:focus {
  text-decoration: none;
  background-color: rgba(0, 0, 0, 0.01);
  color: #378bb5;
}

.c-panel--inverse {
  background-color: #378bb5;
  color: #fff;
}

/*------------------------------------*\
    #SCORE
\*------------------------------------*/
/**
 * Each Discovry has an associated score (e.g. 7.2 out of a possible 10). The
 * Score component simply displays that score colored appropriately.
 *
 * We blend between three main brackets of score (Poor, Average, and Good) by
 * creating an array of scores and their colors, and then looping through that
 * array in order to output selectors that bind onto a data attribute, for
 * example:
 *
 * .c-score[data-score^="7."] {}
 *
 * This selector looks for a DOM node with a class of `.c-score`, and then
 * sees what the first characters of its `data-score` attribute are (`^=`). If
 * the first characters are, for example, 7., then the DOM node gets styled in
 * the color of the 7.x rating.
 */
.c-score {
  display: inline-block;
  /**
   * Apply the score’s color as a background by augmenting with a class of
   * `.c-score--inverse`.
   *
   * 1. This magic number applies the right amount of padding to spoof a space
   *    character either side of the text.
   */
}
.c-score[data-score^="0."] {
  color: red;
}
.c-score[data-score^="1."] {
  color: #ff2100;
}
.c-score[data-score^="2."] {
  color: #ff4200;
}
.c-score[data-score^="3."] {
  color: #ff6300;
}
.c-score[data-score^="4."] {
  color: #ff8400;
}
.c-score[data-score^="5."] {
  color: orange;
}
.c-score[data-score^="6."] {
  color: #cc9e00;
}
.c-score[data-score^="7."] {
  color: #999600;
}
.c-score[data-score^="8."] {
  color: #668f00;
}
.c-score[data-score^="9."] {
  color: #338700;
}
.c-score[data-score^="10."] {
  color: green;
}
.c-score--inverse {
  vertical-align: middle;
  padding-right: 0.28em;
  /* [1] */
  padding-left: 0.28em;
  /* [1] */
  font-weight: 400;
  border-radius: 3px;
}
.c-score--inverse[data-score^="0."] {
  background-color: red;
  color: #fff;
}
.c-score--inverse[data-score^="1."] {
  background-color: #ff2100;
  color: #fff;
}
.c-score--inverse[data-score^="2."] {
  background-color: #ff4200;
  color: #fff;
}
.c-score--inverse[data-score^="3."] {
  background-color: #ff6300;
  color: #fff;
}
.c-score--inverse[data-score^="4."] {
  background-color: #ff8400;
  color: #fff;
}
.c-score--inverse[data-score^="5."] {
  background-color: orange;
  color: #fff;
}
.c-score--inverse[data-score^="6."] {
  background-color: #cc9e00;
  color: #fff;
}
.c-score--inverse[data-score^="7."] {
  background-color: #999600;
  color: #fff;
}
.c-score--inverse[data-score^="8."] {
  background-color: #668f00;
  color: #fff;
}
.c-score--inverse[data-score^="9."] {
  background-color: #338700;
  color: #fff;
}
.c-score--inverse[data-score^="10."] {
  background-color: green;
  color: #fff;
}

.c-score--small {
  font-size: 14px;
  font-size: 1rem;
  line-height: 1.428571429;
}

/*------------------------------------*\
  #BUTTONS
\*------------------------------------*/
/**
 * 1. Allow us to style box model properties.
 * 2. Line different sized buttons up a little nicer.
 * 3. Make buttons inherit font styles (often necessary when styling `input`s as
 *    buttons).
 * 4. Reset/normalize some styles.
 * 5. Force all button-styled elements to appear clickable.
 * 6. Subtract the border size from the padding value so that buttons do not
 *    grow larger as we add borders.
 */
.c-btn {
  display: inline-block;
  /* [1] */
  vertical-align: middle;
  /* [2] */
  font: inherit;
  /* [3] */
  text-align: center;
  /* [4] */
  margin: 0;
  /* [4] */
  cursor: pointer;
  /* [5] */
  padding: 10px 20px;
}
.c-btn:hover, .c-btn:focus {
  text-decoration: none;
}

.c-btn--primary {
  background-color: #378bb5;
  color: #fff;
  border-radius: 3px;
  transition: 0.333333333s;
}
.c-btn--primary:hover, .c-btn--primary:focus {
  background-color: #317ca1;
}
.t-red .c-btn--primary {
  background-color: #c00;
}

.c-btn--secondary {
  background-color: #abc123;
  color: #fff;
  border-radius: 3px;
  transition: 0.333333333s;
}
.c-btn--secondary:hover, .c-btn--secondary:focus {
  background-color: #98ab1f;
}

.c-btn--small {
  padding: 5px 10px;
}

.c-btn--large {
  padding: 20px 40px;
}

/*------------------------------------*\
  #AVATAR
\*------------------------------------*/
.c-avatar {
  display: block;
  width: 60px;
  height: 60px;
  border-radius: 100%;
}

.c-avatar--small {
  width: 30px;
  height: 30px;
}

.c-avatar--large {
  width: 120px;
  height: 120px;
}

.c-testimonial {
  font-size: 18px;
  font-size: 1.285714286rem;
  line-height: 1.111111111;
  padding: 20px;
  border-left: 8px solid #378bb5;
  background-color: #fff;
}

.c-testimonial__title {
  font-size: 12px;
  font-size: 0.857142857rem;
  line-height: 1.666666667;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  margin-bottom: 0;
}

.c-testimonial__source {
  display: block;
  color: #666;
}

/*------------------------------------*\
  #CALENDAR
\*------------------------------------*/
.c-calendar {
  width: 100%;
  table-layout: fixed;
  font-size: 12px;
  font-size: 0.857142857rem;
  line-height: 1.666666667;
  text-align: center;
}
.c-calendar th,
.c-calendar td {
  padding: 5px;
  border: 1px solid #e4e4e4;
  background-color: #fff;
}
.c-calendar th {
  font-weight: 700;
  border-bottom-width: 2px;
}

.c-calendar__title {
  color: #fff;
}
.c-calendar__title.c-calendar__title {
  background-color: #378bb5;
  border-color: currentColor;
  border-bottom-width: 1px;
}

.c-calendar__outside {
  color: #999;
}
.c-calendar__outside.c-calendar__outside {
  background-color: transparent;
}

.c-calendar__busy {
  color: #fff;
}
.c-calendar__busy.c-calendar__busy {
  background-color: #abc123;
  border-color: currentColor;
}

/*------------------------------------*\
  #HEADLINE
\*------------------------------------*/
.c-headline {
  font-size: 14px;
  font-size: 1rem;
  line-height: 1.428571429;
  font-weight: 400;
  border-bottom: 1px solid #cccccc;
  color: #999;
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

/*------------------------------------*\
  #PROMO
\*------------------------------------*/
.c-promo {
  padding: 20px;
  margin-bottom: 20px;
  background-color: #ff8;
  border-radius: 3px;
}
.c-promo > :last-child {
  margin-bottom: 0;
}

.c-promo__title {
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
}

/*------------------------------------*\
  #PAGINATION
\*------------------------------------*/
.c-pagination {
  font-family: Lato, sans-serif;
  font-size: 12px;
  font-size: 0.857142857rem;
  line-height: 1.666666667;
  margin: 0;
  padding: 0;
  list-style: none;
  margin-bottom: 20px;
  display: table;
  table-layout: fixed;
  width: 100%;
  text-align: center;
  border: 1px solid #fff;
  border-radius: 3px;
  overflow: hidden;
}

/**
 * 1. Hide all of the pagination items to start off with…
 * 2. …but show them all on big enough screens.
 */
.c-pagination__item {
  display: none;
}
@media screen and (min-width: 720px) {
  .c-pagination__item {
    display: table-cell;
  }
}
.c-pagination__item + .c-pagination__item {
  border-left: 1px solid #fff;
}

/**
 * Despite the show/hide stuff above, let’s explicitly force all relative
 * pagination controls to be always visible.
 *
 * This means that on small screens, we only get First, Previous, Next, Last
 * links, but on larger screens we get all of the numbers as well.
 */
.c-pagination__item--first,
.c-pagination__item--prev,
.c-pagination__item--next,
.c-pagination__item--last {
  display: table-cell;
}

.c-pagination__link {
  text-decoration: none;
  display: block;
  padding: 5px;
  color: #fff;
  background-color: #378bb5;
}
@media screen and (min-width: 480px) {
  .c-pagination__link {
    padding: 10px;
  }
}
.c-pagination__link:hover, .c-pagination__link:focus {
  background-color: #317ca1;
}
.c-pagination__link.is-current {
  background-color: #4099c5;
  text-decoration: underline;
  cursor: default;
}

/*------------------------------------*\
  #PROSE
\*------------------------------------*/
.s-prose {
  /**
   * Set continuous prose in a nice, large serif.
   */
  font-family: Baskerville, Garamond, Palatino, "Palatino Linotype", "Hoefler Text", "Times New Roman", serif;
  font-size: 18px;
  font-size: 1.285714286rem;
  line-height: 1.111111111;
  /**
   * Make all headings in CMS-powered content the same size in order to
   * prevent the user abusing visual vs. semantic hierarchy.
   */
  /**
   * Make links a lot more obvious in continuous text by having them
   * underlined and colored in their default state.
   */
  /**
   * Indent list elements enough that their bullets are not leaking out of
   * their container.
   */
  /**
   * Prevent CMS users from abusing line breaks.
   */
  /**
   * Discourage WYSIWYG users from applying their own styles.
   */
}
.s-prose h1, .s-prose h2, .s-prose h3, .s-prose h4, .s-prose h5, .s-prose h6 {
  font-family: Lato, sans-serif;
  font-size: 18px;
  font-size: 1.285714286rem;
  line-height: 1.111111111;
}
.s-prose a {
  color: #378bb5;
  text-decoration: underline;
  font-weight: 400;
}
.s-prose a:hover, .s-prose a:focus {
  color: #317ca1;
}
.s-prose ul,
.s-prose ol {
  margin-left: 40px;
}
.s-prose br + br {
  display: none;
}
.s-prose [style]:after {
  content: " Please refrain from adding your own styling.";
  color: red;
}

/*------------------------------------*\
  #RED
\*------------------------------------*/
/**
 * Apply a theme to the entire view. Add `class="t-red"` to the HTML or BODY
 * element of the page.
 */
.t-red .c-btn--primary {
  background-color: #c00;
}

/*------------------------------------*\
  #HEADINGS
\*------------------------------------*/
.u-h1 {
  font-size: 36px;
  font-size: 2.571428571rem;
  line-height: 1.111111111;
}

.u-h2 {
  font-size: 28px;
  font-size: 2rem;
  line-height: 1.428571429;
}

.u-h3 {
  font-size: 24px;
  font-size: 1.714285714rem;
  line-height: 1.666666667;
}

.u-h4 {
  font-size: 20px;
  font-size: 1.428571429rem;
  line-height: 1;
}

.u-h5 {
  font-size: 18px;
  font-size: 1.285714286rem;
  line-height: 1.111111111;
}

.u-h6 {
  font-size: 16px;
  font-size: 1.142857143rem;
  line-height: 1.25;
}

/*------------------------------------*\
    #WIDTHS
\*------------------------------------*/
/**
 * A series of width helper classes that you can use to size things like grid
 * systems. Classes can take a fraction-like format (e.g. `.u-2/3`) or a spoken-
 * word format (e.g. `.u-2-of-3`). Use these in your markup:
 *
 * <div class="u-7/12">
 */
.u-1\/1 {
  width: 100% !important;
}

.u-1\/2 {
  width: 50% !important;
}

.u-2\/2 {
  width: 100% !important;
}

.u-1\/3 {
  width: 33.333333333% !important;
}

.u-2\/3 {
  width: 66.666666667% !important;
}

.u-3\/3 {
  width: 100% !important;
}

.u-1\/4 {
  width: 25% !important;
}

.u-2\/4 {
  width: 50% !important;
}

.u-3\/4 {
  width: 75% !important;
}

.u-4\/4 {
  width: 100% !important;
}

.u-1\/5 {
  width: 20% !important;
}

.u-2\/5 {
  width: 40% !important;
}

.u-3\/5 {
  width: 60% !important;
}

.u-4\/5 {
  width: 80% !important;
}

.u-5\/5 {
  width: 100% !important;
}

@media screen and (min-width: 720px) {
  .u-1\/1\@sm {
    width: 100% !important;
  }

  .u-1\/2\@sm {
    width: 50% !important;
  }

  .u-2\/2\@sm {
    width: 100% !important;
  }

  .u-1\/3\@sm {
    width: 33.333333333% !important;
  }

  .u-2\/3\@sm {
    width: 66.666666667% !important;
  }

  .u-3\/3\@sm {
    width: 100% !important;
  }

  .u-1\/4\@sm {
    width: 25% !important;
  }

  .u-2\/4\@sm {
    width: 50% !important;
  }

  .u-3\/4\@sm {
    width: 75% !important;
  }

  .u-4\/4\@sm {
    width: 100% !important;
  }

  .u-1\/5\@sm {
    width: 20% !important;
  }

  .u-2\/5\@sm {
    width: 40% !important;
  }

  .u-3\/5\@sm {
    width: 60% !important;
  }

  .u-4\/5\@sm {
    width: 80% !important;
  }

  .u-5\/5\@sm {
    width: 100% !important;
  }
}
@media screen and (min-width: 1024px) {
  .u-1\/1\@md {
    width: 100% !important;
  }

  .u-1\/2\@md {
    width: 50% !important;
  }

  .u-2\/2\@md {
    width: 100% !important;
  }

  .u-1\/3\@md {
    width: 33.333333333% !important;
  }

  .u-2\/3\@md {
    width: 66.666666667% !important;
  }

  .u-3\/3\@md {
    width: 100% !important;
  }

  .u-1\/4\@md {
    width: 25% !important;
  }

  .u-2\/4\@md {
    width: 50% !important;
  }

  .u-3\/4\@md {
    width: 75% !important;
  }

  .u-4\/4\@md {
    width: 100% !important;
  }

  .u-1\/5\@md {
    width: 20% !important;
  }

  .u-2\/5\@md {
    width: 40% !important;
  }

  .u-3\/5\@md {
    width: 60% !important;
  }

  .u-4\/5\@md {
    width: 80% !important;
  }

  .u-5\/5\@md {
    width: 100% !important;
  }
}
@media screen and (min-width: 1200px) {
  .u-1\/1\@lg {
    width: 100% !important;
  }

  .u-1\/2\@lg {
    width: 50% !important;
  }

  .u-2\/2\@lg {
    width: 100% !important;
  }

  .u-1\/3\@lg {
    width: 33.333333333% !important;
  }

  .u-2\/3\@lg {
    width: 66.666666667% !important;
  }

  .u-3\/3\@lg {
    width: 100% !important;
  }

  .u-1\/4\@lg {
    width: 25% !important;
  }

  .u-2\/4\@lg {
    width: 50% !important;
  }

  .u-3\/4\@lg {
    width: 75% !important;
  }

  .u-4\/4\@lg {
    width: 100% !important;
  }

  .u-1\/5\@lg {
    width: 20% !important;
  }

  .u-2\/5\@lg {
    width: 40% !important;
  }

  .u-3\/5\@lg {
    width: 60% !important;
  }

  .u-4\/5\@lg {
    width: 80% !important;
  }

  .u-5\/5\@lg {
    width: 100% !important;
  }
}
/*------------------------------------*\
  #HEALTHCHECK
\*------------------------------------*/
/*------------------------------------*\
  #DEBUG
\*------------------------------------*/
/*------------------------------------*\
  #SHAME.CSS
\*------------------------------------*/
._c-page-foot {
  display: block;
}

/*# sourceMappingURL=main.css.map */
© 2020 GitHub, Inc.
Terms
Privacy
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
